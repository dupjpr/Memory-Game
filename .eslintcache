[{"/home/pakman/Projects/React/concentrate/src/index.js":"1","/home/pakman/Projects/React/concentrate/src/App.js":"2","/home/pakman/Projects/React/concentrate/src/components/Card.jsx":"3","/home/pakman/Projects/React/concentrate/src/components/Board.jsx":"4","/home/pakman/Projects/React/concentrate/src/components/Cards.jsx":"5","/home/pakman/Projects/React/concentrate/src/contexts/AppContext.js":"6","/home/pakman/Projects/React/concentrate/src/contexts/LogicContext.js":"7"},{"size":149,"mtime":1609885723709,"results":"8","hashOfConfig":"9"},{"size":420,"mtime":1614911990249,"results":"10","hashOfConfig":"9"},{"size":907,"mtime":1615289352924,"results":"11","hashOfConfig":"9"},{"size":427,"mtime":1614964375891,"results":"12","hashOfConfig":"9"},{"size":748,"mtime":1611265802541,"results":"13","hashOfConfig":"9"},{"size":1370,"mtime":1615207602625,"results":"14","hashOfConfig":"9"},{"size":2417,"mtime":1615292150361,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1kj4dc5",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/pakman/Projects/React/concentrate/src/index.js",[],["33","34"],"/home/pakman/Projects/React/concentrate/src/App.js",[],"/home/pakman/Projects/React/concentrate/src/components/Card.jsx",["35"],"/home/pakman/Projects/React/concentrate/src/components/Board.jsx",[],"/home/pakman/Projects/React/concentrate/src/components/Cards.jsx",[],["36","37"],"/home/pakman/Projects/React/concentrate/src/contexts/AppContext.js",["38"],"import { createContext, useEffect, useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\n\nconst AppContext = createContext();\n\nconst AppContextProvider = ({ children }) => {\n\n    // estados de la aplicación\n\n    const [characters, setCharacters] = useState([]);\n\n    // llamado del API y configuración de la baraja\n\n    useEffect(() => {\n\n        const url = 'https://rickandmortyapi.com/api/character';\n\n        fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                const result = data.results.sort(() => 0.5 - Math.random());\n                setCharacters(result);\n            })\n\n    }, []);\n\n    const gameCollection = [];\n\n    characters.map((character) => {\n        \n        if (gameCollection.length !== 4) {\n            \n            gameCollection.push(character);\n            \n        }\n    });\n\n    const game = [...gameCollection, ...gameCollection].sort(() => 0.5 - Math.random());\n\n    function keyGenerator() {\n\n        const gameKey = game.map((card) => {\n            \n            return { ...card, key: uuidv4(), status: true }\n\n        })\n\n        return gameKey\n    }\n    const gameCards = keyGenerator();\n\n\n    return (\n        <AppContext.Provider value={{ gameCards }}>\n            {children}\n        </AppContext.Provider>\n    );\n}\n\nexport { AppContext };\nexport default AppContextProvider;","/home/pakman/Projects/React/concentrate/src/contexts/LogicContext.js",["39","40","41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":8,"column":13,"nodeType":"48","messageId":"49","endLine":8,"endColumn":21},{"ruleId":"42","replacedBy":"50"},{"ruleId":"44","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":29,"column":32,"nodeType":"54","messageId":"55","endLine":29,"endColumn":34},{"ruleId":"56","severity":1,"message":"57","line":45,"column":8,"nodeType":"58","endLine":45,"endColumn":18,"suggestions":"59"},{"ruleId":"52","severity":1,"message":"53","line":55,"column":40,"nodeType":"54","messageId":"55","endLine":55,"endColumn":42},{"ruleId":"52","severity":1,"message":"53","line":70,"column":44,"nodeType":"54","messageId":"55","endLine":70,"endColumn":46},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'pickCard' is assigned a value but never used.","Identifier","unusedVar",["60"],["61"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'element', 'gameCards', and 'pickedCards'. Either include them or remove the dependency array. You can also do a functional update 'setPickedCards(p => ...)' if you only need 'pickedCards' in the 'setPickedCards' call.","ArrayExpression",["62"],"no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},"Update the dependencies array to be: [element, gameCards, pickCard, pickedCards]",{"range":"65","text":"66"},[1063,1073],"[element, gameCards, pickCard, pickedCards]"]